#! /bin/bash
#
# Daemon that updates the status bar every x seconds.

if [[ "$(pgrep statusbard | wc -l)" -gt "2" ]]; then
    echo "Statusbar daemon is already running. Quiting." 2>&1
    exit 1
fi

function bt() {
    echo "BT: $(bluetoothctl devices | cut -f2 -d' ' | while read uuid; do bluetoothctl info $uuid; done | grep "Connected: yes" | wc -l)"
}

function wifi() {
    network="$(iwgetid -r)"

    if [[ $? -eq 0 ]]; then
        val=$network
    else
        val="Disconnected"
    fi


    echo "WiFi: $val"
}

function vol() {
    amix=$(amixer sget Master)
    status="$(awk -F"[][]" '/Front Left:/ { print $4 }' <<< $amix)"
    level="$(awk -F"[][]" '/Front Left:/ { print $2 }' <<< $amix)"

    if [[ "$status" == "off" ]]; then
        level="Muted"
    fi

    echo "Vol: $level"
}

function memusage() {
    read total available <<< $(grep -E 'MemTotal|MemAvailable' /proc/meminfo | awk '{printf "%.1f ", $2 / 1048576}')
    used="$(echo "scale=1; $total - $available" | bc)"

    perc="$(echo "scale=4;$used / $total * 100" | bc)"
    if [[ "${perc%.*}" -ge "90" ]]; then
        color=""
    else
        color=""
    fi

    printf "RAM: $color%.2f/%.2f GB" $used $total
}

function cpuusage() {
    if load="$(cpuload)"; then
        if [[ "${load%.*}" -ge "95" ]]; then
            color=""
        else
            color=""
        fi

        printf "CPU: $color%5s%%" $load
    else
        echo "CPU: N/A"
    fi
}

function cputemp() {
    temp="$(bc <<< "$(cat /sys/class/thermal/thermal_zone0/temp)/1000")"

    if [[ "$temp" -ge "95" ]]; then
        color=""
    elif [[ "$temp" -ge "85" ]]; then
        color=""
    else
        color=""
    fi

    echo "Temp: $color$tempÂ°C"
}

function batt() {
    cap=$(cat /sys/class/power_supply/BAT0/capacity)
    status=$(cat /sys/class/power_supply/BAT0/status)

    label="BAT"
    if [[ "$status" != "Discharging" ]]; then
        label="CHG"
    fi

    if [[ "$cap" -le "5" ]]; then
        color=""
    elif [[ "$cap" -le "20" ]]; then
        color=""
    else
        color=""
    fi

    echo "$label: $color$cap%"
}

function curtime() {
    date +"%F %R:%S"
}

function draw() {
    xsetroot -name "$(bt) | $(wifi) | $(vol) | $(memusage) | $(cpuusage) | $(cputemp) | $(batt) | $(curtime)"
}

trap draw SIGUSR1

while true; do
    draw
    sleep ${0.5:-1} &
    wait $!
done
